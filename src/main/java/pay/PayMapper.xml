<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pay.PayMapper">

<resultMap id="PaymentWithItemsMap" type="pay.Payment">
    <id property="paymentId" column="payment_id"/>
    <result property="userId" column="u_id"/>
    <result property="name" column="name"/>
    <result property="num" column="num"/>
    <result property="address" column="address"/>
    <result property="post" column="post"/>
    <result property="detailAddress" column="detail_address"/>
    
    <collection property="items" ofType="pay.PaymentItem">
        <id property="itemId" column="payment_item_id"/>
        <result property="title" column="title"/>
        <result property="quantity" column="quantity"/>
        <result property="price" column="price"/>
    </collection>
</resultMap>


	<select id="getNextPaymentId" resultType="int">
    SELECT payment_item_id_seq.NEXTVAL FROM dual
</select>


<!-- 결제 및 주문상품을 각각 행으로 저장 -->
  <insert id="insertPayment" parameterType="map">
    INSERT INTO payments (
      payment_id, u_id, name, num, address, post, detail_address
    )
    VALUES (
      #{paymentId, jdbcType=INTEGER}, 
      #{userId, jdbcType=VARCHAR}, 
      #{name, jdbcType=VARCHAR}, 
      #{num, jdbcType=VARCHAR}, 
      #{address, jdbcType=VARCHAR}, 
      #{post, jdbcType=VARCHAR}, 
      #{detailAddress, jdbcType=VARCHAR}
    )
  </insert>

  <insert id="insertPaymentItem" parameterType="map">
    INSERT INTO payment_items (
      payment_item_id, payment_id, title, quantity, price
    ) VALUES (
      payment_item_id_seq.nextval, 
      #{paymentId, jdbcType=INTEGER}, 
      #{item.title, jdbcType=VARCHAR}, 
      #{item.quantity, jdbcType=INTEGER}, 
      #{item.price, jdbcType=INTEGER}
    )
  </insert>
  
  <select id="getPaymentHistoryByUserId" resultMap="PaymentWithItemsMap">
    SELECT 
        p.payment_id,
        p.u_id,
        p.name,
        p.num,
        p.address,
        p.post,
        p.detail_address,
        i.payment_item_id,
        i.title,
        i.quantity,
        i.price
    FROM 
        payments p
    JOIN 
        payment_items i ON p.payment_id = i.payment_id
    WHERE 
        p.u_id = #{userId}
    ORDER BY 
        p.payment_id DESC
</select>
</mapper>
